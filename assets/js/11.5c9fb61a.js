(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{483:function(e,t,r){"use strict";r.r(t);var o=r(35),a=Object(o.a)({},(function(){var e=this,t=e.$createElement,r=e._self._c||t;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("h1",{attrs:{id:"funwallet-ethereum-provider"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#funwallet-ethereum-provider"}},[e._v("#")]),e._v(" FunWallet Ethereum Provider")]),e._v(" "),r("h2",{attrs:{id:"what-is-a-ethereum-provider"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#what-is-a-ethereum-provider"}},[e._v("#")]),e._v(" What Is A Ethereum Provider ?")]),e._v(" "),r("p",[e._v("💡 Most dapps use web3 or etherjs to do blockchain stuff on the client.")]),e._v(" "),r("p",[e._v("💡 These all follow “best” practices on interfaces and expose everything you need to do blockchain development.")]),e._v(" "),r("p",[e._v("💡 Also the nodes and signing all needs to happen in the wallet client not the dapp client as that’s where it has all the context.")]),e._v(" "),r("p",[e._v("💡 A ethereum provider is something you can inject into the constructor of web3 or etherjs and override the point it does the JSONRPC call.")]),e._v(" "),r("p",[e._v("💡 Minimal changes if any to the web3/ethers code.")]),e._v(" "),r("p",[e._v("💡 Once done our ethereum provider will proxy all the JSONRPC calls to the wallet")]),e._v(" "),r("h2",{attrs:{id:"ethereum-provider-flow"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#ethereum-provider-flow"}},[e._v("#")]),e._v(" Ethereum provider flow")]),e._v(" "),r("p",[e._v("Click on the image to zoom in.")]),e._v(" "),r("img",{attrs:{src:e.$withBase("/fun-wallet-provider-flow.png")}})])}),[],!1,null,null,null);t.default=a.exports}}]);